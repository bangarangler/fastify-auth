{"version":3,"sources":["axiosConfig/axiosConfig.ts","components/Register.tsx","components/Login.tsx","rq-hooks/useRegister.ts","constants.ts","rq-hooks/useLogin.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","Axios","create","headers","withCredentials","RegisterActionChoices","LoginActionChoices","registerReducer","state","action","type","FIELD","field","value","initState","email","password","Register","useReducer","regState","dispatch","mutate","console","log","useMutation","loginInput","a","post","data","response","Error","message","onSubmit","e","preventDefault","onChange","target","loginReducer","Login","options","loginState","onSuccess","onError","err","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","QueryClientProvider","client","StrictMode","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.e4b45fa2.chunk.js","sourcesContent":["import Axios from \"axios\";\n// import { REST_BASE_ENDPOINT_CADDY } from \"../constants\";\n// import { URL } from \"../constants\";\n// console.log(\"URL\", URL);\n\n// YOU CAN'T \"FIX THIS\".  To save yourself time leave this file.\n// If you failed to heed our warning please up the counter below\n// Counter: 5\nexport const axios = Axios.create({\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  // credentials: \"include\",\n  withCredentials: true,\n});\n\n// axios.interceptors.request.use((config) => {\n//   const token = localStorage.getItem(\"accessToken\");\n//   if (token) {\n//     config.headers.Authorization = `Bearer ${token}`;\n//   }\n//   return config;\n// });\n\n// axios.interceptors.response.use(\n//   (response) => {\n//     // Any status code that lie within the range of 2xx cause this function to trigger\n//     // Do something with response data\n//     return response;\n//   },\n//   (error) => {\n//     console.log(\"error from interceptors\", error);\n//     // Any status codes that falls outside the range of 2xx cause this function to trigger\n//     // Do something with response error\n//     console.log(\"error.response.status\", error.response.status);\n//     if (401 === error.response.status) {\n//       try {\n//         const getNewTokens = async () => {\n//           const data = await axios.get(`${REST_BASE_ENDPOINT}/auth/refresh`);\n//           if (data?.data?.data) {\n//             console.log(\"data.data.data\", data.data.data);\n//             localStorage.setItem(\"accessToken\", data.data.data.accessToken);\n//             return data.data.data;\n//           }\n//         };\n//         getNewTokens();\n//       } catch (err) {\n//         console.log(\"err from catchblock axiosConfig\", err);\n//         console.log(\"NEED TO LOG OUT HERE REFRESH IS BAD\");\n//       }\n//     }\n//     // this currently stops my infinite loop but i don't love it. we may need to\n//     // actually use 403 for other things. leaving for the mean time. need to\n//     // move forward for now\n//     if (403 === error.response.status) {\n//       console.log(\"LOG USER OUT HERE NOW\");\n//       localStorage.removeItem(\"accessToken\");\n//       // window.location.replace(\"http://localhost:3000\");\n//       //TODO: FIX THIS ONCE WORKING\n//       window.location.replace(`http://${URL}`);\n//     }\n//     return Promise.reject(error);\n//   }\n// );\n","import { useReducer } from \"react\";\nimport { useRegister } from \"../rq-hooks\";\nenum RegisterActionChoices {\n  FIELD,\n}\n\ntype RegisterActions = {\n  type: RegisterActionChoices.FIELD;\n  field: string;\n  value: string;\n};\n\ntype RegisterState = {\n  email: string;\n  password: string;\n};\n\nconst registerReducer = (state: RegisterState, action: RegisterActions) => {\n  switch (action.type) {\n    case RegisterActionChoices.FIELD:\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n  }\n};\n\nconst initState: RegisterState = {\n  email: \"\",\n  password: \"\",\n};\nexport const Register = () => {\n  const [regState, dispatch] = useReducer(registerReducer, initState);\n  const { email, password } = regState;\n  const { mutate } = useRegister();\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        mutate({ email, password });\n      }}>\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) =>\n          dispatch({\n            type: RegisterActionChoices.FIELD,\n            field: \"email\",\n            value: e.target.value,\n          })\n        }\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) =>\n          dispatch({\n            type: RegisterActionChoices.FIELD,\n            field: \"password\",\n            value: e.target.value,\n          })\n        }\n      />\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n","import { useReducer } from \"react\";\nimport { useLogin } from \"../rq-hooks/useLogin\";\nenum LoginActionChoices {\n  FIELD,\n}\n\ntype LoginActions = {\n  type: LoginActionChoices.FIELD;\n  field: string;\n  value: string;\n};\n\ntype LoginState = {\n  email: string;\n  password: string;\n};\n\nconst loginReducer = (state: LoginState, action: LoginActions) => {\n  switch (action.type) {\n    case LoginActionChoices.FIELD:\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n  }\n};\n\nconst initState: LoginState = {\n  email: \"\",\n  password: \"\",\n};\nexport const Login = () => {\n  const [loginState, dispatch] = useReducer(loginReducer, initState);\n  const { email, password } = loginState;\n  const { mutate } = useLogin({\n    onSuccess: (data: any) => {\n      console.log(\"data from login\", data);\n    },\n    onError: (err: any) => {\n      console.log(\"err from login\", err);\n    },\n  });\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        mutate({ email, password });\n      }}>\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) =>\n          dispatch({\n            type: LoginActionChoices.FIELD,\n            field: \"email\",\n            value: e.target.value,\n          })\n        }\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) =>\n          dispatch({\n            type: LoginActionChoices.FIELD,\n            field: \"password\",\n            value: e.target.value,\n          })\n        }\n      />\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n","import { REST_BASE_ENDPOINT } from \"../constants\";\nimport { useMutation } from \"react-query\";\n// import axios from \"axios\";\n// import { axios } from \"../utils/axiosConfig\";\nimport { axios } from \"../axiosConfig/axiosConfig\";\n\ninterface RegisterInput {\n  email: string;\n  password: string;\n}\n\nexport function useRegister() {\n  console.log(\"running useLogin\");\n\n  return useMutation(async (loginInput: RegisterInput) => {\n    try {\n      const { data } = await axios.post(\n        `${REST_BASE_ENDPOINT}/api/register`,\n        loginInput\n      );\n      console.log(\"data from useRegister\", data);\n      if (data.data) {\n        return data.data;\n      }\n    } catch (err) {\n      console.log(\"err from useRegister\", err.response.data);\n      throw new Error(err.response.data.message);\n    }\n  });\n}\n","export const REST_BASE_ENDPOINT =\n  process.env.NODE_ENV === \"production\"\n    ? `https://fastify-auth.dev`\n    : \"http://localhost:5000\";\n\nexport const REST_BASE_ENDPOINT_CADDY =\n  process.env.NODE_ENV === \"production\"\n    ? `https://fastify-auth.dev`\n    : \"http://localhost:5000\";\n// :\"https://fastify-auth.dev\";\n\nexport const URL =\n  process.env.NODE_ENV === \"production\" ? \"fastify-auth.dev\" : \"localhost:3000\";\n","import { REST_BASE_ENDPOINT_CADDY } from \"../constants\";\nimport { useMutation } from \"react-query\";\n// import axios from \"axios\";\nimport { axios } from \"../axiosConfig/axiosConfig\";\n\ninterface LoginInput {\n  email: string;\n  password: string;\n}\n\nexport function useLogin(options: any) {\n  console.log(\"running useLogin\");\n\n  return useMutation(async (loginInput: LoginInput) => {\n    try {\n      const { data } = await axios.post(\n        `${REST_BASE_ENDPOINT_CADDY}/api/authorize`,\n        loginInput\n      );\n      console.log(\"data from useLogin\", data);\n      if (data.data) {\n        return data.data;\n      }\n    } catch (err) {\n      console.log(\"err from useLogin\", err.response.data);\n      throw new Error(err.response.data.message);\n    }\n  }, options);\n}\n","import { Register } from \"./components/Register\";\nimport { Login } from \"./components/Login\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Register />\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n    <ReactQueryDevtools initialIsOpen={false} />\n  </QueryClientProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}